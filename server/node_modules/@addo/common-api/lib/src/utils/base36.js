"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Dateutils = exports.generateCode = exports.randomString = exports.Base36 = void 0;
class Base36 {
    /**
     * generates 36 capacity digits string from integer result is string of [0-1A-Z]
     * @param {number} num
     * @returns {string}
     */
    static int2Str36(num) {
        let baseIdx = Base36.d36.length;
        let result = [];
        let empty = null;
        if (num === 0)
            return "0";
        for (let i = 0; i < baseIdx; i++) {
            let d = Base36.d36[i];
            let c = 0;
            if (d <= num) {
                c = Math.trunc(num / d);
                num -= d * c;
                c = Base36.encodeCharCode2Int36(c);
                empty = Base36.encodeCharCode2Int36(0);
            }
            else {
                c = empty;
            }
            if (c)
                result.push(c);
        }
        return String.fromCharCode.apply(null, result);
    }
    /**
     * converts alphanum string of [0-9A-Z] into integer
     * @param {string} str
     * @return {number}
     */
    static str2Int36(str) {
        const codes = [];
        for (let i = 0; i < str.length; i++) {
            let code = Base36.decodeCharCode2Int36(str.charCodeAt(i));
            if (code !== null) {
                codes.push(code);
            }
        }
        return codes.reverse().reduce((r, v, i) => {
            return r + v * Math.pow(36, i);
        }, 0);
    }
    /**
     * converts 0-35 integer to charCode of [0-9A-Z]
     * @param {number} v
     * @returns {number}
     */
    static encodeCharCode2Int36(v) {
        return 0 <= v && v < 10 ? v + 48 : 10 <= v && v < 36 ? v + 55 : null;
    }
    /**
     * converts charCode of [0-9A-Z] to 0-35 integer
     * @param {number} d
     * @returns {number}
     */
    static decodeCharCode2Int36(d) {
        return 47 < d && d < 58 ? d - 48 : 63 < d && d < 91 ? d - 55 : null;
    }
}
exports.Base36 = Base36;
Base36.d36 = [
    Math.pow(36, 10),
    Math.pow(36, 9),
    Math.pow(36, 8),
    Math.pow(36, 7),
    Math.pow(36, 6),
    Math.pow(36, 5),
    Math.pow(36, 4),
    Math.pow(36, 3),
    Math.pow(36, 2),
    Math.pow(36, 1),
    Math.pow(36, 0),
];
function randomString(n, possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") {
    var text = "";
    for (var i = 0; i < n; i++)
        text += possible.charAt(Math.floor(Math.random() * possible.length));
    return text;
}
exports.randomString = randomString;
function generateCode(n, n_random_character = 2, possibleChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") {
    return Base36.int2Str36(n) + randomString(n_random_character, possibleChars);
}
exports.generateCode = generateCode;
class Dateutils {
    static addDays(date, days) {
        var date = new Date(date.valueOf());
        date.setDate(date.getDate() + days);
        return date;
    }
    static getDates(startDate, stopDate) {
        var dateArray = new Array();
        var currentDate = startDate;
        while (currentDate <= stopDate) {
            dateArray.push(new Date(currentDate));
            currentDate = Dateutils.addDays(currentDate, 1);
        }
        return dateArray;
    }
}
exports.Dateutils = Dateutils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZTM2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2Jhc2UzNi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxNQUFhLE1BQU07SUFlakI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBVztRQUNqQyxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztRQUNoQyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksR0FBRyxLQUFLLENBQUM7WUFBRSxPQUFPLEdBQUcsQ0FBQztRQUMxQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2hDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ1YsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFO2dCQUNaLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDeEIsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2IsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbkMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN4QztpQkFBTTtnQkFDTCxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ1g7WUFDRCxJQUFJLENBQUM7Z0JBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN2QjtRQUNELE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lB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
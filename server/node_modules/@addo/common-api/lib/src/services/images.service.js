"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImagesService = void 0;
const AWS = __importStar(require("aws-sdk"));
const http_error_1 = require("../utils/http.error");
require("reflect-metadata");
const tsyringe_1 = require("tsyringe");
let ImagesService = class ImagesService {
    constructor() {
        this.bucket = process.env.IMAGES_BUCKET;
        this.accessKeyId = process.env.IMAGES_ACCESSKEYID;
        this.secretAccessKey = process.env.IMAGES_SECRETACCESSKEY;
        this.region = process.env.IMAGES_REGION;
        this.s3 = new AWS.S3({
            accessKeyId: this.accessKeyId,
            secretAccessKey: this.secretAccessKey,
            region: this.region,
            params: { Bucket: this.bucket },
        });
    }
    async getImage(key) {
        let imageResponse = await this.s3
            .getObject({ Bucket: this.bucket, Key: key.replace("SH#", "") })
            .promise();
        if (imageResponse.$response.error) {
            throw new http_error_1.HttpError(imageResponse.$response.error.message, imageResponse.$response.error, 500);
        }
        return imageResponse.$response.data;
    }
    async addImage(key, body) {
        try {
            let upload = await this.s3
                .upload({
                Bucket: this.bucket,
                Key: key,
                ACL: "public-read",
                Body: body,
            })
                .promise();
            return upload.Key;
        }
        catch (error) {
            throw new http_error_1.HttpError(error.message, error, 500);
        }
    }
    async deleteImage(key) {
        let deleteImage = await this.s3
            .deleteObject({ Key: key.replace("SH#", ""), Bucket: this.bucket })
            .promise();
        if (deleteImage.$response.error) {
            throw new http_error_1.HttpError(deleteImage.$response.error.message, deleteImage.$response.error, 500);
        }
        return deleteImage.$response.data;
    }
};
ImagesService = __decorate([
    tsyringe_1.injectable(),
    __metadata("design:paramtypes", [])
], ImagesService);
exports.ImagesService = ImagesService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2VydmljZXMvaW1hZ2VzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUErQjtBQUMvQixvREFBZ0Q7QUFDaEQsNEJBQTBCO0FBQzFCLHVDQUFzQztBQUd0QyxJQUFhLGFBQWEsR0FBMUIsTUFBYSxhQUFhO0lBT3hCO1FBTlEsV0FBTSxHQUFXLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO1FBQzNDLGdCQUFXLEdBQVcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztRQUNyRCxvQkFBZSxHQUFXLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7UUFDN0QsV0FBTSxHQUFXLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO1FBSWpELElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ25CLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztZQUM3QixlQUFlLEVBQUUsSUFBSSxDQUFDLGVBQWU7WUFDckMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1lBQ25CLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFO1NBQ2hDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQVc7UUFDeEIsSUFBSSxhQUFhLEdBQUcsTUFBTSxJQUFJLENBQUMsRUFBRTthQUM5QixTQUFTLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUMvRCxPQUFPLEVBQUUsQ0FBQztRQUNiLElBQUksYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUU7WUFDakMsTUFBTSxJQUFJLHNCQUFTLENBQ2pCLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFDckMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQzdCLEdBQUcsQ0FDSixDQUFDO1NBQ0g7UUFDRCxPQUFPLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBOEIsQ0FBQztJQUNoRSxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVEsQ0FBQyxHQUFXLEVBQUUsSUFBUztRQUNuQyxJQUFJO1lBQ0YsSUFBSSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsRUFBRTtpQkFDdkIsTUFBTSxDQUFDO2dCQUNOLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtnQkFDbkIsR0FBRyxFQUFFLEdBQUc7Z0JBQ1IsR0FBRyxFQUFFLGFBQWE7Z0JBQ2xCLElBQUksRUFBRSxJQUFJO2FBQ1gsQ0FBQztpQkFDRCxPQUFPLEVBQUUsQ0FBQztZQUNiLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUNuQjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsTUFBTSxJQUFJLHNCQUFTLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFXO1FBQzNCLElBQUksV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLEVBQUU7YUFDNUIsWUFBWSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDbEUsT0FBTyxFQUFFLENBQUM7UUFDYixJQUFJLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFO1lBQy9CLE1BQU0sSUFBSSxzQkFBUyxDQUNqQixXQUFXLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQ25DLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUMzQixHQUFHLENBQ0osQ0FBQztTQUNIO1FBQ0QsT0FBTyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztJQUNwQyxDQUFDO0NBQ0YsQ0FBQTtBQTNEWSxhQUFhO0lBRHpCLHFCQUFVLEVBQUU7O0dBQ0EsYUFBYSxDQTJEekI7QUEzRFksc0NBQWEifQ==